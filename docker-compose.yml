
services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"  # Para acceder a PostgreSQL desde el host si es necesario
    networks:
      - backend

  redis:
    image: redis:7
    volumes:
      - redis_data:/data  # Persistir datos de Redis
    ports:
      - "6380:6379" 
    networks:
      - backend

  web:
    build: .
    command: gunicorn backend.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - .:/code
      - static_volume:/code/staticfiles
      - media_volume:/code/media
    env_file:
      - .env
    
    ports:
      - "8000:8000"

    depends_on:
      - db
      - redis
    networks:
      - backend

  celery:
    build: .
    command: celery -A backend worker --loglevel=info
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - backend

  celery-beat:
    build: .
    command: celery -A backend beat --loglevel=info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/code
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - backend

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/code/staticfiles
      - media_volume:/code/media
    depends_on:
      - web
    networks:
      - backend

volumes:
  postgres_data:
  redis_data:
  static_volume:
  media_volume:

networks:
  backend:
    driver: bridge